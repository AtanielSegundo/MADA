import numpy as np
from numba import njit, prange


@njit(cache=True, parallel=True)
def compute_distance_matrix_numba_parallel(points):
    num_points = points.shape[0]
    distance_matrix = np.zeros((num_points, num_points), dtype=np.float64)
    for i in prange(num_points):
        for j in range(num_points):
            if i != j:
                distance_matrix[i, j] = np.sqrt((points[i, 0] - points[j, 0]) ** 2 +
                                                (points[i, 1] - points[j, 1]) ** 2)

    return distance_matrix
